node n1 {
    type router
    model static
    network-config {
	hostname R1
	!
	interface eth3
	 ip address 145.77.44.1/24
	 ipv6 address 2001:0::1/64
	!
	interface eth0
	 ip address 145.77.36.1/24
	!
	interface eth2
	 ip address 145.77.32.1/24
	!
	interface eth1
	 ip address 145.77.28.1/24
	!
    }
    canvas c1
    iconcoords {492.110778104 732.306930526}
    labelcoords {464.397965182 716.306930526}
    interface-peer {eth1 n6}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 145.77.32.2
	
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	 /sbin/ip route add 145.77.12.0/24 via 145.77.32.2
	
	/sbin/ip route add 145.77.73.12 via 145.77.32.2
	/sbin/ip route add 145.77.57.10 via 145.77.32.2
	
	}
    }
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	dirs=('/etc/dhcp', '/var/lib/dhcp', )
	files=('/etc/dhcp/dhcpd.conf', '/var/lib/dhcp/dhcpd.leases', )
	}
    }
    custom-config {
	custom-config-id service:DHCP:/var/lib/dhcp/dhcpd.leases
	custom-command /var/lib/dhcp/dhcpd.leases
	config {
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	subnet 145.77.28.0 netmask 255.255.255.0 {
	  pool {
	    range 145.77.28.127 145.77.28.254;
	    default-lease-time 600;
	    option routers 145.77.28.1;
	    option domain-name "fit9135";
	    option domain-name-servers 145.77.12.12;
	  }
	}
	
	
	
	}
    }
    services {IPForward DefaultRoute StaticRoute DHCP}
    interface-peer {eth2 n8}
    interface-peer {eth0 n25}
    interface-peer {eth3 n5}
}

node n5 {
    type router
    model static
    network-config {
	hostname R2
	!
	interface eth0
	 ip address 145.77.41.1/24
	!
	interface eth3
	 ip address 145.77.24.2/28
	!
	interface eth2
	 ip address 145.77.44.2/24
	 ipv6 address 2001:0::2/64
	!
	interface eth1
	 ip address 145.77.73.1/24
	!
    }
    canvas c1
    iconcoords {502.369798962 322.537785164}
    labelcoords {474.656986041 306.537785164}
    services {IPForward DefaultRoute StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	/sbin/ip route add 145.77.12.0/24 via 145.77.41.2
	/sbin/ip route add 145.77.57.10 via 145.77.24.1
	/sbin/ip route add 145.77.28.0/24 via 145.77.24.1
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 145.77.41.2
	
	}
    }
    interface-peer {eth1 n7}
    interface-peer {eth0 n25}
    interface-peer {eth3 n8}
    interface-peer {eth2 n1}
}

node n6 {
    type lanswitch
    network-config {
	hostname switch1
	!
    }
    canvas c1
    iconcoords {597.25883581 712.185152261}
    labelcoords {576.474226119 700.185152261}
    interface-peer {e0 n1}
    interface-peer {e1 n11}
    interface-peer {e3 n10}
    interface-peer {e2 n12}
    interface-peer {e4 n13}
}

node n7 {
    type lanswitch
    network-config {
	hostname switch3
	!
    }
    canvas c1
    iconcoords {423.107004546 239.824972243}
    labelcoords {402.322394855 227.824972243}
    interface-peer {e3 n18}
    interface-peer {e0 n5}
}

node n10 {
    type router
    model PC
    network-config {
	hostname client1
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {626.612664883 805.342828911}
    labelcoords {598.899851961 789.342828911}
    services {DefaultRoute DHCPClient}
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	files=('startdhcpclient.sh', )
	}
    }
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	
	}
    }
    interface-peer {eth0 n6}
}

node n11 {
    type router
    model PC
    network-config {
	hostname client2
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {667.550487056 720.436440955}
    labelcoords {639.837674135 704.436440955}
    services {DefaultRoute DHCPClient}
    interface-peer {eth0 n6}
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	files=('startdhcpclient.sh', )
	}
    }
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	
	}
    }
}

node n12 {
    type router
    model PC
    network-config {
	hostname client3
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {655.053064444 630.082611883}
    labelcoords {627.340251523 614.082611883}
    services {DefaultRoute SSH DHCPClient}
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	files=('startdhcpclient.sh', )
	}
    }
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	
	}
    }
    interface-peer {eth0 n6}
}

node n13 {
    type router
    model PC
    network-config {
	hostname client4
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {544.892810406 800.885768851}
    labelcoords {517.179997485 784.885768851}
    services {DefaultRoute DHCPClient}
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	files=('startdhcpclient.sh', )
	}
    }
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	
	}
    }
    interface-peer {eth0 n6}
}

node n24 {
    type router
    model host
    network-config {
	hostname dnsserver
	!
	interface eth0
	 ip address 145.77.12.12/24
	!
    }
    canvas c1
    iconcoords {224.176914536 262.381995293}
    labelcoords {196.464101615 246.381995293}
    custom-config {
	custom-config-id service:maradns
	custom-command maradns
	config {
	dirs=('/etc/maradns', )
	files=('/etc/maradns/mararc', '/etc/maradns/db.fit9135', '/etc/maradns/db.reverse', 'maradns.sh', )
	}
    }
    custom-config {
	custom-config-id service:maradns:maradns.sh
	custom-command maradns.sh
	config {
	#!/bin/sh
	# auto-generated for maradns
	maradns -f /etc/maradns/mararc
	}
    }
    custom-config {
	custom-config-id service:maradns:/etc/maradns/db.reverse
	custom-command /etc/maradns/db.reverse
	config {
	12.73.77.145.in-addr.arpa. PTR intranet.fit9135. ~
	11.12.77.145.in-addr.arpa. PTR www.fit9135. ~
	145.77.12.10.in-addr.arpa. PTR ssh.fit9135. ~
	
	}
    }
    custom-config {
	custom-config-id service:maradns:/etc/maradns/db.fit9135
	custom-command /etc/maradns/db.fit9135
	config {
	intranet.fit9135. 145.77.73.12 ~
	www.fit9135. 145.77.12.11 ~
	ssh.fit9135. 145.77.12.10 ~
	
	}
    }
    custom-config {
	custom-config-id service:maradns:/etc/maradns/mararc
	custom-command /etc/maradns/mararc
	config {
	ipv4_bind_addresses = "145.77.12.12/24"
	
	chroot_dir = "/etc/maradns"
	csv2 = {}
	csv2["fit9135."] = "db.fit9135"
	csv2["0.10.in-addr.arpa."] = "db.reverse"
	
	}
    }
    services {DefaultRoute SSH maradns}
    interface-peer {eth0 n2}
}

node n25 {
    type router
    model static
    network-config {
	hostname R3
	!
	interface eth0
	 ip address 145.77.0.3/24
	!
	interface eth1
	 ip address 145.77.36.2/24
	!
	interface eth2
	 ip address 145.77.41.2/24
	!
	interface eth3
	 ip address 145.77.12.1/24
	!
    }
    canvas c1
    iconcoords {332.013392501 602.388346239}
    labelcoords {304.30057958 586.388346239}
    custom-config {
	custom-config-id service:Firewall
	custom-command Firewall
	config {
	files=('firewall.sh', )
	}
    }
    custom-config {
	custom-config-id service:Firewall:firewall.sh
	custom-command firewall.sh
	config {
	#!/bin/sh
	iptables -F
	iptables -P INPUT -j DROP
	iptables -P OUTPUT -j DROP
	iptables -P FORWARD -j DROP
	
	#interface eth0 
	#q(a)
	iptables -A FORWARD -i eth0 -o eth3 -d 145.77.12.11 -p tcp --destination-port 80 -j ACCEPT
	
	iptables -A FORWARD -i eth0 -o eth3 -d 145.77.12.10 -p tcp --destination-port 22 -j ACCEPT
	
	iptables -A FORWARD -i eth3 -o eth0 -s 145.77.12.11 -p tcp --source-port 80 -j ACCEPT
	
	iptables -A FORWARD -i eth3 -o eth0 -s 145.77.12.10 -p tcp --source-port 22 -j ACCEPT
	
	##DNS server
	iptables -A INPUT -p udp --source-port 53 -j ACCEPT
	iptables -A OUTPUT -p udp --destination-port 53 -j ACCEPT
	iptables -A INPUT -p tcp --source-port 53 -j ACCEPT
	iptables -A OUTPUT -p tcp --destination-port 53 -j ACCEPT
	
	
	
	iptables -A FORWARD -i eth0 -o eth3 -d 145.77.12.11 -p icmp -j ACCEPT
	
	iptables -A FORWARD -i eth0 -o eth3 -d 145.77.12.10 -p icmp -j ACCEPT
	
	iptables -A FORWARD -i eth0 -o eth3 -d 145.77.12.12 -p icmp -j ACCEPT
	
	iptables -A FORWARD -i eth3 -o eth0 -s 145.77.12.11 -p icmp -j ACCEPT
	
	iptables -A FORWARD -i eth3 -o eth0 -s 145.77.12.10 -p icmp -j ACCEPT
	
	iptables -A FORWARD -i eth3 -o eth0 -s 145.77.12.12 -p icmp -j ACCEPT
	
	#q(b)
	iptables -A INPUT -i eth1 -p all -j ACCEPT
	iptables -A INPUT -i eth2 -p all -j ACCEPT
	iptables -A INPUT -i eth3 -p all -j ACCEPT
	iptables -A OUTPUT -o eth1 -p all -j ACCEPT
	iptables -A OUTPUT -o eth2 -p all -j ACCEPT
	iptables -A OUTPUT -o eth3 -p all -j ACCEPT
	
	#q(c)
	iptables -A INPUT -p all -m state --state ESTABLISHED -j ACCEPT
	iptables -A OUTPUT -p all -m state --state ESTABLISHED -j ACCEPT
	
	#q(d)
	iptables -A OUTPUT -o eth1 -p tcp --destination-port 22 -j ACCPECT
	
	#q(e)
	iptables -A INPUT -j DROP
	iptables -A OUTPUT -j DROP
	iptables -A FORWARDPUT -j DROP
	
	
	
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	/sbin/ip route add 145.77.73.12 via 145.77.41.1
	/sbin/ip route add 145.77.57.10 via 145.77.41.1
	/sbin/ip route add 145.77.28.0/24 via 145.77.41.1
	/sbin/ip route add 192.168.192.0/20 via 145.77.0.2
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 145.77.0.0
	
	
	}
    }
    services {IPForward DefaultRoute StaticRoute Firewall}
    interface-peer {eth3 n2}
    interface-peer {eth2 n5}
    interface-peer {eth1 n1}
    interface-peer {eth0 n14}
}

node n18 {
    type router
    model host
    network-config {
	hostname intranet
	!
	interface eth0
	 ip address 145.77.73.12/24
	!
    }
    canvas c1
    iconcoords {323.755752861 155.906387956}
    labelcoords {296.04293994 139.906387956}
    services {DefaultRoute SSH HTTP}
    interface-peer {eth0 n7}
    custom-config {
	custom-config-id service:HTTP
	custom-command HTTP
	config {
	dirs=('/etc/apache2', '/var/run/apache2', '/var/log/apache2', '/var/lock/apache2', '/var/www', '/run/lock', )
	files=('/etc/apache2/apache2.conf', '/etc/apache2/envvars', '/var/www/index.html', )
	}
    }
    custom-config {
	custom-config-id service:HTTP:/var/www/index.html
	custom-command /var/www/index.html
	config {
	<html><body><!-- generated by utility.py:HttpService -->
	<h1>FIT9135 intranet web server</h1>
	<p>Congratulations! You have reached the intranet web server.</p>
	</body></html>
	}
    }
}

node n19 {
    type router
    model host
    network-config {
	hostname www
	!
	interface eth0
	 ip address 145.77.12.11/24
	!
    }
    canvas c1
    iconcoords {170.712812921 416.410161514}
    labelcoords {143.0 400.410161514}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	/sbin/ip route add 145.77.28.0 via 145.77.12.1
	
	}
    }
    custom-config {
	custom-config-id service:HTTP
	custom-command HTTP
	config {
	dirs=('/etc/apache2', '/var/run/apache2', '/var/log/apache2', '/var/lock/apache2', '/var/www', '/run/lock', )
	files=('/etc/apache2/apache2.conf', '/etc/apache2/envvars', '/var/www/index.html', )
	}
    }
    custom-config {
	custom-config-id service:HTTP:/var/www/index.html
	custom-command /var/www/index.html
	config {
	<html><body><!-- generated by utility.py:HttpService -->
	<h1>Congratulations! You have reached the web server</h1>
	</body></html>
	}
    }
    services {DefaultRoute StaticRoute SSH HTTP}
    interface-peer {eth0 n2}
}

node n8 {
    type router
    model static
    network-config {
	hostname R4
	!
	interface eth0
	 ip address 145.77.32.2/24
	!
	interface eth2
	 ip address 145.77.57.1/24
	!
	interface eth1
	 ip address 145.77.24.1/24
	!
    }
    canvas c1
    iconcoords {672.940905122 429.09996299}
    labelcoords {645.228092201 413.09996299}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 145.77.24.2
	
	
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	/sbin/ip route add 145.77.73.12 via 145.77.24.2
	/sbin/ip route add 145.77.12.0/24 via 145.77.24.2
	
	/sbin/ip route add 145.77.28.0/24 via 145.77.32.1
	}
    }
    services {IPForward DefaultRoute StaticRoute}
    interface-peer {eth1 n5}
    interface-peer {eth2 n3}
}

node n2 {
    type lanswitch
    network-config {
	hostname switch4
	!
    }
    canvas c1
    iconcoords {296.018547277 423.948637287}
    labelcoords {275.233937587 411.948637287}
    interface-peer {e0 n25}
    interface-peer {e2 n19}
    interface-peer {e1 n9}
    interface-peer {e3 n24}
}

node n9 {
    type router
    model host
    network-config {
	hostname ssh
	!
	interface eth0
	 ip address 145.77.12.10/24
	!
    }
    canvas c1
    iconcoords {80.1051177665 527.921667236}
    labelcoords {52.3923048454 511.921667236}
    services {DefaultRoute SSH}
    interface-peer {eth0 n2}
}

node n3 {
    type lanswitch
    network-config {
	hostname switch2
	!
    }
    canvas c1
    iconcoords {755.206276927 394.612159322}
    labelcoords {757.983845063 355.801270189}
    interface-peer {e0 n8}
    interface-peer {e1 n4}
}

node n4 {
    type router
    model host
    network-config {
	hostname backup
	!
	interface eth0
	 ip address 145.77.57.10/24
	!
    }
    canvas c1
    iconcoords {837.533826558 374.016660498}
    labelcoords {821.088962829 334.5}
    interface-peer {eth0 n3}
}

node n15 {
    type hub
    network-config {
	hostname n15
	!
    }
    canvas c1
    iconcoords {134.0 767.0}
    labelcoords {134.0 791.0}
    interface-peer {e2 n17}
    interface-peer {e3 n21}
    interface-peer {e4 n20}
    interface-peer {e0 n14}
}

node n17 {
    type router
    model PC
    network-config {
	hostname n17
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {318.0 746.0}
    labelcoords {318.0 778.0}
    interface-peer {eth0 n15}
    services {DefaultRoute SSH DHCPClient}
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	files=('startdhcpclient.sh', )
	}
    }
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	
	}
    }
}

node n20 {
    type router
    model PC
    network-config {
	hostname n20
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {150.0 856.0}
    labelcoords {150.0 888.0}
    interface-peer {eth0 n15}
    services {DefaultRoute DHCPClient}
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	files=('startdhcpclient.sh', )
	}
    }
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	
	}
    }
}

node n21 {
    type router
    model PC
    network-config {
	hostname n21
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {316.0 848.0}
    labelcoords {316.0 880.0}
    interface-peer {eth0 n15}
    services {DefaultRoute DHCPClient}
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	files=('startdhcpclient.sh', )
	}
    }
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	
	}
    }
}

node n14 {
    type router
    model router
    network-config {
	hostname External
	!
	interface eth0
	 ip address 145.77.0.2/24
	!
	interface eth1
	 ip address 192.168.192.1/20
	!
    }
    canvas c1
    iconcoords {144.0 682.0}
    labelcoords {144.0 714.0}
    interface-peer {eth0 n25}
    interface-peer {eth1 n15}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 10.0.0.1
	#/sbin/ip route add 3ffe:4::/64 via 2001:1::1
	/sbin/ip route add 145.77.12.0/24 via 145.77.0.3
	
	
	}
    }
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	dirs=('/etc/dhcp', '/var/lib/dhcp', )
	files=('/etc/dhcp/dhcpd.conf', )
	cmdup=('dhcpd', 'sudo service isc-dhcp-server start', )
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	# auto-generated by DHCP service (utility.py)
	# NOTE: move these option lines into the desired pool { } block(s) below
	#option domain-name "test.com";
	#option domain-name-servers 10.0.0.1;
	#option routers 10.0.0.1;
	
	
	
	
	subnet 192.168.192.0 netmask 255.255.240.0 {
	  pool {
	    range 192.168.199.255 192.168.207.254;
	    default-lease-time 600;
	    option routers 192.168.192.1;
	   
	  }
	}
	
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward StaticRoute DHCP}
}

link l5 {
    nodes {n6 n1}
    bandwidth 0
}

link l7 {
    nodes {n11 n6}
    bandwidth 0
}

link l9 {
    nodes {n10 n6}
    bandwidth 0
}

link l8 {
    nodes {n12 n6}
    bandwidth 0
}

link l10 {
    nodes {n13 n6}
    bandwidth 0
}

link l13 {
    nodes {n18 n7}
}

link l15 {
    delay 100
    bandwidth 1000000000
    nodes {n1 n8}
}

link l6 {
    nodes {n7 n5}
}

link l1 {
    nodes {n25 n2}
}

link l12 {
    nodes {n19 n2}
}

link l3 {
    delay 100
    nodes {n5 n25}
    bandwidth 1000000000
}

link l19 {
    nodes {n9 n2}
}

link l11 {
    nodes {n2 n24}
}

link l16 {
    delay 100
    nodes {n8 n5}
    bandwidth 1000000000
}

link l2 {
    delay 110
    nodes {n1 n25}
    bandwidth 100000000
}

link l4 {
    nodes {n8 n3}
    bandwidth 0
}

link l14 {
    nodes {n3 n4}
    bandwidth 0
}

link l17 {
    delay 110
    nodes {n1 n5}
    bandwidth 100000000
}

link l22 {
    nodes {n15 n17}
    bandwidth 0
}

link l23 {
    nodes {n15 n21}
    bandwidth 0
}

link l24 {
    nodes {n15 n20}
    bandwidth 0
}

link l18 {
    nodes {n14 n25}
    bandwidth 0
}

link l20 {
    nodes {n15 n14}
    bandwidth 0
}

annotation a1 {
    iconcoords {796.0 21.0}
    type text
    label {Student ID: 30170427}
    labelcolor black
    fontfamily {Arial}
    fontsize {14}
    effects {bold}
    canvas c1
}

canvas c1 {
    name {Assignment2}
    refpt {0 0 47.5791667 -122.132322 2.0}
    scale {150.0}
    size {3300 1200}
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid no
    traffic_start 1
}

option session {
    controlnet=
    enablerj45=0
    enablesdt=0
    preservedir=0
}

